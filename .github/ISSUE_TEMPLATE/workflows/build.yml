name: Build & Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [1.20.x, 1.21.x]

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
          cache: true

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install dependencies
        run: |
          go mod download
          sudo apt-get install -y --no-install-recommends build-essential libssl-dev

      - name: Verify dependencies
        run: go mod verify

      - name: Build
        run: make build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: quantum-blockchain-binaries-${{ matrix.go-version }}
          path: |
            bin/
            !bin/*.tmp
          retention-days: 7

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        go-version: [1.20.x, 1.21.x]

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
          cache: true

      - name: Run tests
        run: make test

  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
          cache: true

      - name: Run linters
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Run security checks
        uses: securego/gosec@v2
        with:
          args: ./...

